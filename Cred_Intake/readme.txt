-----07/31/2025----- STEVEN CADENA

TLDR

- Place the new logs into the 'Target' directory
- Run Master6.py [dump output to 'Results directory]
- Double check the processing log for errors
- Make sure all providers were imported properly
- Run organize.py [point the arg to the output in 'Results' directory, dump output to where ever you want]
- Your good to move the data to the Master Log 
	- Links Tab on the Master Log does not include the grayed out IPAs [the ones we no longer manage]
	- keep that in mind when you paste the new data

Note

The gap bewteen the two operations serves as the check and balance
If they change the headers youl need to adap and update the code accordingly.


-----🔧 Project Overview-----

This project is designed to handle provider credentialing data from multiple Excel sheets, transforming and organizing it into a clean, categorized, and styled master file.

There are two main scripts that work in sequence:

    master6.py – the rummaging magic: it pulls data from various Excel sheets and normalizes them into a consolidated master dataset.

    organize.py – the OCD magic: it takes that master data and categorizes it into neatly styled sheets based on status/type (like Initial, Recreds, HDOs, etc.), applying consistent formatting and logging the process.


-----🚀 How to Use-----

Step-by-Step Instructions



1. Run master6.py first:

        This script processes an Excel workbook containing multiple credentialing sheets (one per provider or group).

        It consolidates the data into one unified Excel file with standardized columns and network codes.


	Usage:
		python master6.py input_file.xlsx -o output_file.xlsx


    - input_file.xlsx: Your multi-sheet source file.

    - -o output_file.xlsx: Optional output filename (defaults to master_output.xlsx).

📦 Output: A single Excel file where each row is a normalized provider entry with an x marking their network affiliations




2. Run organize.py after:

    This script reads the output file from the first step.

    It categorizes entries into separate sheets (e.g., “Initial”, “Recreds”, “Reinstatements”, etc.) based on the STATUS field.

    It applies consistent styling (borders, fonts, fills) for IPA-related columns and logs the processing results.


	Usage:

		python organize.py /path/to/master_output.xlsx /path/to/output_dir

    First argument: Path to the Excel file generated by master6.py.

    Second argument: Directory to store the final master categorized file and logs.

📦 Output:

    - A file called ALL_MASTER.xlsx with categorized sheets.

    - A processing_log.xlsx file with details on what was processed and by whom

        .



-----📁 Example Workflow-----

# Step 1: Normalize all raw provider credentialing sheets
python master6.py credentialing_data.xlsx -o master_output.xlsx

# Step 2: Organize and style the normalized master file
python organize.py master_output.xlsx final_output_dir/




-----📝 Notes for Future Usage-----

    Make sure Excel files are not open or locked while running the scripts.

    organize.py preserves the original column styles only for IPA-related fields.

    The STATUS field is crucial — it determines which sheet a record ends up in.

    You can feed organize.py either a single file or an entire directory of Excel files.